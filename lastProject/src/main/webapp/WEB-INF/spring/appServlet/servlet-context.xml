<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- <resources mapping="/맵핑명/**" location="실제 파일을 업로드할 경로 지정" 외부 경로의 경우 file:///이 필요 /> -->
<!-- 	<resources mapping="/uploadStorage/**" location="file:///C:/Users/user/Desktop/GitHub/uploadStorage/" /> -->

	<!-- 1. 스프링 프레임워크의 ViewResolver -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
<!-- 	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!-- 		<beans:property name="prefix" value="/WEB-INF/views/" /> -->
<!-- 		<beans:property name="suffix" value=".jsp" /> -->
<!-- 	</beans:bean> -->
	
	<!-- 2. tiles 설정 - 타일즈를 통해서만 ViewResolver 처리 -->
<!-- 	<beans:bean id="tilesViewResolver" -->
<!-- 		class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" /> -->

<!-- 	<beans:bean id="tilesConfigurer" -->
<!-- 		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> -->
<!-- 		<beans:property name="definitions"> -->
<!-- 			<beans:list> -->
<!-- 				<beans:value>/WEB-INF/tiles/tiles-setting.xml</beans:value> -->
<!-- 			</beans:list> -->
<!-- 		</beans:property> -->
<!-- 	</beans:bean> -->

	<!-- 
		3. spring과 tiles을 같이 사용하는 ViewResolver 설정
		    - ViewResolver는 tiles의 설정파일 여부에 따라  spring과 tiles를 골라 사용
	-->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles-setting.xml</beans:value>
				<beans:value>/WEB-INF/tiles/admin-setting.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 
		3. spring과 tiles을 같이 사용하는 ViewResolver 설정
		    - ViewResolver는 설정된 우선 순위에 따라 탐색
	-->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<!-- 우선 순위 설정 -->
		<beans:property name="order" value="1" /> 
	</beans:bean>

	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- 우선 순위 설정 -->
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- 파일 첨부를 위한 bean -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</beans:bean>

	<!-- ** : 모든 패키지 폴더 -->
	<!-- 지정 패키지 내의 객체들을 찾아서 생성 -->
	<context:component-scan base-package="com.spring.**" />
	
	
	
</beans:beans>
