<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 구현된 클래스가 위치할 곳을 가리킴 -->
<mapper namespace="com.spring.client.board.dao.BoardDAO">
	<!-- board : com.spring.client.board.vo.BoardVO -->
	
	<!-- 따로 분리해서 sql을 만듬 -->
	<sql id="boardSearch">
		<if test="search=='b_title'">
			<![CDATA[b_title LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='b_content'">
			<![CDATA[b_content LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='b_name'">
			<![CDATA[b_name LIKE '%' || #{keyword} || '%']]>
		</if>
		<if test="search=='b_date'">
			<![CDATA[to_char(b_date, 'YYYY-MM-DD') between #{start_date} and #{end_date}]]>
		</if>
	</sql>
	
	<!-- 게시판 리스트 기본 조회 -->
<!-- 	<select id="boardList" parameterType="board" resultType="board"> -->
<!-- 		SELECT b_num, b_name, b_title, to_char(b_date, 'YYYY-MM-DD') as b_date -->
<!-- 		FROM spring_board -->
<!-- 		ORDER BY b_num desc -->
<!-- 	</select> -->

	<!-- 게시판 리스트 검색 구문 추가 -->
<!-- 	<select id="boardList" parameterType="board" resultType="board"> -->
<!-- 		SELECT b_num, b_name, b_title, to_char(b_date, 'YYYY-MM-DD') as b_date -->
<!-- 		FROM spring_board -->
		
	 		<!-- if가 만족할 때만 where가 추가 -->
<!-- 		<where> -->
<!-- 			<if test="search=='b_title'"> -->
<!-- 				<![CDATA[b_title LIKE '%' || #{keyword} || '%']]> -->
<!-- 			</if> -->
<!-- 			<if test="search=='b_content'"> -->
<!-- 				<![CDATA[b_content LIKE '%' || #{keyword} || '%']]> -->
<!-- 			</if> -->
<!-- 			<if test="search=='b_name'"> -->
<!-- 				<![CDATA[b_name LIKE '%' || #{keyword} || '%']]> -->
<!-- 			</if> -->
<!-- 		</where> -->
<!-- 		ORDER BY b_num desc -->
<!-- 	</select> -->

	<!-- 페이지당 게시물 리스트(페이징 처리와 검색 처리) -->
	<!-- hint를 포함한 구문에 오류가 생기는 것을 방지하고자 <![CDATA[]]>로 처리 -->
	<select id="boardList" parameterType="board" resultType="board">
		<![CDATA[
		SELECT 
		    rnum, b_num, b_name, b_title, to_char(b_date, 'YYYY-MM-DD') as b_date
		FROM(
		    SELECT /*+ INDEX_DESC(spring_board spring_board_pk) */
		        rownum as rnum, b_num, b_name, b_title, b_date
		    FROM spring_board 
		    WHERE]]>
		    	<!-- Non-Over는 붙여주는 것, Overrides는 지워주는 것 -->
		    	<!-- if 조건 만족 :  (if 참의 문자열)AND -> (b_title LIKE '%' || #{keyword} || '%') AND -->
		    	<!-- if 조건 불만족 : AND가 있을 경우, AND 삭제-->
			    <trim prefix="(" suffix=") AND " prefixOverrides="AND">
	    			<include refid="boardSearch"></include>
			    </trim>
	    		<![CDATA[rownum <= #{pageNum} * #{amount}
	    ) boardlist
		WHERE rnum > (#{pageNum} - 1) * #{amount} ]]>
	</select>

	<!-- 전체 레코드 수 조회 -->
	<select id="boardListCnt" parameterType="board" resultType="int">
		SELECT count(*) FROM spring_board
		<trim prefix=" WHERE (" suffix=")">
			<include refid="boardSearch"></include>
		</trim>
	</select>

	<!-- 게시판 글 등록 -->	
<!-- 	<insert id="boardInsert" parameterType="board"> -->
<!-- 		INSERT INTO spring_board(b_num, b_name, b_title, b_content, b_pwd)  -->
<!-- 		VALUES(spring_board_seq.NEXTVAL, #{b_name}, #{b_title}, #{b_content}, #{b_pwd}) -->
<!-- 	</insert> -->

	<!-- 게시판 글 등록 -->	
	<insert id="boardInsert" parameterType="board">
		<!-- 시퀀스 조회해서 vo의 b_num에 설정 -->
		<selectKey keyProperty="b_num" resultType="int" order="BEFORE">
			SELECT spring_board_seq.NEXTVAL FROM DUAL
		</selectKey>
	
		INSERT INTO spring_board(b_num, b_name, b_title, b_content, b_pwd) 
		VALUES(#{b_num}, #{b_name}, #{b_title}, #{b_content}, #{b_pwd})
	</insert>
	
	<!-- 상세 페이지를 위한 게시물 조회 -->
	<!-- 선택한 글의 vo 조회, 읽어올 값이 int뿐이라면 int를 주어도 허용 -->
	<select id="boardDetail" parameterType="board" resultType="board">
		SELECT b_num, b_name, b_title, b_content, to_char(b_date, 'YYYY-MM-DD HH24:MI:SS') as b_date
		FROM spring_board
		WHERE b_num = #{b_num}
	</select>
	
	<!-- 비밀번호 일치 여부 체크 -->
	<select id="pwdConfirm" parameterType="board" resultType="int">
		SELECT NVL((SELECT 1 FROM spring_board WHERE b_num = #{b_num} AND b_pwd = ${b_pwd}
		), 0) as state 
		FROM dual
	</select>
	
	<!-- 게시물 삭제 -->
	<delete id="boardDelete" parameterType="board">
		DELETE FROM spring_board WHERE b_num = #{b_num}
	</delete>
	
	<!-- 게시물 수정 -->
	<update id="boardUpdate" parameterType="board">
		UPDATE spring_board 
		SET b_title=#{b_title}, b_content=#{b_content}, b_date = SYSDATE
		<!-- myBatis가 가지고 있는 동적 요소 if -->
		<if test="b_pwd != ''">, b_pwd=#{b_pwd}</if> 
		WHERE b_num=#{b_num}
	</update>
</mapper>